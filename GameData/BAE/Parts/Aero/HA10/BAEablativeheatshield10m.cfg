PART
{
	name = BAEablativeheatshield10m
	module = Part
	author = greystork
	
	MODEL
	{
		model = BAE/Parts/Aero/HA10/BAEablativeheatshield10m
	}
	rescaleFactor = 1
	node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 6
	node_stack_bottom = 0.0, -1.6, 0.0, 0.0, -1.0, 0.0, 6
	CoPOffset = 0.0, 3.8, 0.0
	CoLOffset = 0.0, -1.2, 0.0

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple
	TechRequired = heavyLanding
	entryCost = 4800
	cost = 2400
	category = Aero
	subcategory = 0
	title = BAE HA10 Heat Shield
	manufacturer = Behemoth Aerospace Engineering
	description = This very, very, very big heat shield fits only enormous re-entry vehicles. Warranty void if exposed to excessive heat.
	attachRules = 1,0,1,0,0
	mass = 8.0
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	breakingForce = 640000
	breakingTorque = 640000
	crashTolerance = 9
	maxTemp = 3000
	fuelCrossFeed = False
	PhysicsSignificance = 0
	stageOffset = 1
	childStageOffset = 1
	bulkheadProfiles = size6
	thermalMassModifier = 0.001
	
	MODULE
	{
		name = ModuleJettison
		jettisonName = fairing
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.5
		jettisonForce = 15
		jettisonDirection = 0 0 1
	}	

	MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -6000
		lossConst = 1
		pyrolysisLossFactor = 600
		reentryConductivity = 0.01
		ablationTempThresh = 500
	}
	RESOURCE
	{
		name = Ablator
		amount = 12800
		maxAmount = 12800
	}	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			// prelaunch only at home
			// our main situationMask above includes prelaunch
			// but if nothome, here, and that mask with this value (11)
			// which excludes prelaunch
			type = SITUATION
			value = 11
			body = _NotHome
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 350
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 250
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 300
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 600
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 400
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1500
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1000
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 6000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 2000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = LT
			value = 0.1
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 6000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 8000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 12000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 12000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 16000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
